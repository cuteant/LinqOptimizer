<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netcoreapp2.1;netstandard2.0</TargetFrameworks>
    <RootNamespace>Nessos.LinqOptimizer.Core</RootNamespace>
    <AssemblyName>LinqOptimizer.Core</AssemblyName>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>LinqOptimizer.Core.StrongName</PackageId>
    <Title>LinqOptimizer.Core.StrongName</Title>
    <Description>LinqOptimizer.Core</Description>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Update="FSharp.Core" Version="$(FSharpCorePackageVersion)" />
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework) == 'netstandard2.0'">
    <PackageReference Include="System.Reflection.Emit" Version="$(SystemReflectionEmitPackageVersion)" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="AssemblyInfo.fs" />
    <Compile Include="Utils.fs" />
    <Compile Include="QueryExpr.fs" />
    <Compile Include="Collector.fs" />
    <Compile Include="ParallelismHelpers.fs" />
    <Compile Include="SortingHelpers.fs" />
    <Compile Include="GroupingHelpers.fs" />
    <Compile Include="ExpressionHelpers.fs" />
    <Compile Include="ReflectionHelpers.fs" />
    <Compile Include="ExpressionTransformer.fs" />
    <Compile Include="ConstantLiftingTransformer.fs" />
    <Compile Include="AnonymousTypeEraser.fs" />
    <Compile Include="FreeVariablesVisitor.fs" />
    <Compile Include="TupleElimination.fs" />
    <Compile Include="TypeCollectorVisitor.fs" />
    <Compile Include="AccessChecker.fs" />
    <Compile Include="Compiler.fs" />
    <Compile Include="CSharpExpressionOptimizer.fs" />
    <Compile Include="FSharpExpressionOptimizer.fs" />
    <Compile Include="Session.fs" />
    <Compile Include="ExtensionMethods.fs" />
  </ItemGroup>

</Project>